SET DATABASE UNIQUE NAME HSQLDB650B6CB856
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE DEFAULT TABLE TYPE CACHED
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 60
SET FILES BACKUP INCREMENT FALSE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO FALSE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 10
SET DATABASE COLLATION "French" NO PAD
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE CACHED TABLE PUBLIC."Items"("Id" VARCHAR(100) NOT NULL PRIMARY KEY,"Name" VARCHAR(100),"DateCreated" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,"DateModified" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,"MediaType" VARCHAR(100),"Size" BIGINT DEFAULT 0 NOT NULL,"IsRead" BOOLEAN DEFAULT FALSE NOT NULL,"TimeStamp" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL)
CREATE CACHED TABLE PUBLIC."Children"("ChildId" VARCHAR(100) NOT NULL,"ItemId" VARCHAR(100) NOT NULL,"TimeStamp" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL)
CREATE UNIQUE INDEX "ChildrenIndex" ON PUBLIC."Children"("ChildId","ItemId")
CREATE CACHED TABLE PUBLIC."Identifiers"("Id" VARCHAR(100) NOT NULL PRIMARY KEY,"UserId" VARCHAR(100) NOT NULL,"InUse" BOOLEAN DEFAULT FALSE NOT NULL,"TimeStamp" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL)
CREATE CACHED TABLE PUBLIC."Users"("Id" VARCHAR(100) NOT NULL PRIMARY KEY,"UserName" VARCHAR(100) NOT NULL,"DisplayName" VARCHAR(100),"RootId" VARCHAR(100) NOT NULL,"TimeStamp" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL)
CREATE UNIQUE INDEX "UsersIndex" ON PUBLIC."Users"("UserName")
CREATE CACHED TABLE PUBLIC."Capabilities"("UserId" VARCHAR(100) NOT NULL,"ItemId" VARCHAR(100) NOT NULL,"CanAddChild" BOOLEAN DEFAULT FALSE NOT NULL,"CanRename" BOOLEAN DEFAULT FALSE NOT NULL,"IsReadOnly" BOOLEAN DEFAULT FALSE NOT NULL,"IsVersionable" BOOLEAN DEFAULT FALSE NOT NULL,"IsWrite" BOOLEAN DEFAULT FALSE NOT NULL,"TimeStamp" TIMESTAMP DEFAULT CURRENT_TIMESTAMP(3) NOT NULL)
CREATE UNIQUE INDEX "CapabilitiesIndex" ON PUBLIC."Capabilities"("UserId","ItemId")
CREATE PROCEDURE PUBLIC."remplaceCapability"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),IN CANADDCHILD BOOLEAN,IN CANRENAME BOOLEAN,IN ISREADONLY BOOLEAN,IN ISVERSIONABLE BOOLEAN) SPECIFIC "remplaceCapability_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC MERGE INTO PUBLIC."Capabilities" USING(VALUES(USERID,ITEMID,CANADDCHILD,CANRENAME,ISREADONLY,ISVERSIONABLE))AS VALS(A,B,C,D,E,F)ON "Capabilities"."UserId"=VALS.A AND "Capabilities"."ItemId"=VALS.B WHEN MATCHED THEN UPDATE SET "Capabilities"."CanAddChild"=VALS.C,"Capabilities"."CanRename"=VALS.D,"Capabilities"."IsReadOnly"=VALS.E,"Capabilities"."IsVersionable"=VALS.F WHEN NOT MATCHED THEN INSERT VALUES VALS.A,VALS.B,VALS.C,VALS.D,VALS.E,VALS.F,DEFAULT,DEFAULT;END
CREATE PROCEDURE PUBLIC."remplaceRoot"(IN ITEMID VARCHAR(100),IN NAME VARCHAR(100),IN DATECREATED TIMESTAMP(3),IN DATEMODIFIED TIMESTAMP(3),IN MEDIATYPE VARCHAR(100),IN SIZE BIGINT) SPECIFIC "remplaceRoot_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC MERGE INTO PUBLIC."Items" USING(VALUES(ITEMID,NAME,DATECREATED,DATEMODIFIED,MEDIATYPE,SIZE))AS VALS(A,B,C,D,E,F)ON "Items"."Id"=VALS.A WHEN MATCHED THEN UPDATE SET "Items"."Name"=VALS.B,"Items"."DateCreated"=VALS.C,"Items"."DateModified"=VALS.D,"Items"."MediaType"=VALS.E,"Items"."Size"=VALS.F WHEN NOT MATCHED THEN INSERT VALUES VALS.A,VALS.B,VALS.C,VALS.D,VALS.E,VALS.F,DEFAULT,DEFAULT;END
CREATE PROCEDURE PUBLIC."remplaceItem"(IN ITEMID VARCHAR(100),IN NAME VARCHAR(100),IN DATECREATED TIMESTAMP(3),IN DATEMODIFIED TIMESTAMP(3),IN MEDIATYPE VARCHAR(100),IN SIZE BIGINT,OUT ROWCOUNT SMALLINT) SPECIFIC "remplaceItem_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC MERGE INTO PUBLIC."Items" USING(VALUES(ITEMID,NAME,DATECREATED,DATEMODIFIED,MEDIATYPE,SIZE))AS VALS(A,B,C,D,E,F)ON "Items"."Id"=VALS.A WHEN MATCHED THEN UPDATE SET "Items"."Name"=VALS.B,"Items"."DateCreated"=VALS.C,"Items"."DateModified"=VALS.D,"Items"."MediaType"=VALS.E,"Items"."Size"=VALS.F WHEN NOT MATCHED THEN INSERT VALUES VALS.A,VALS.B,VALS.C,VALS.D,VALS.E,VALS.F,DEFAULT,DEFAULT;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."selectRoot"(IN USERNAME VARCHAR(100)) SPECIFIC "selectRoot_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT "U"."Id" "UserId","U"."UserName" "UserName","U"."DisplayName" "DisplayName","I"."Id" "Id","I"."Name" "Name","I"."DateCreated" "DateCreated","I"."DateModified" "DateModified","I"."MediaType" "MediaType","I"."Size" "Size","I"."IsRead" "IsRead","C"."CanAddChild" "CanAddChild","C"."CanRename" "CanRename","C"."IsReadOnly" "IsReadOnly","C"."IsVersionable" "IsVersionable" FROM PUBLIC."Items" AS "I" JOIN PUBLIC."Capabilities" AS "C" ON "I"."Id"="C"."ItemId" JOIN PUBLIC."Users" AS "U" ON "U"."Id"="C"."UserId" WHERE "I"."Id"="U"."RootId" AND "U"."UserName"=USERNAME FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."mergeRoot"(IN USERID VARCHAR(100),IN USERNAME VARCHAR(100),IN DISPLAYNAME VARCHAR(100),IN ITEMID VARCHAR(100),IN NAME VARCHAR(100),IN DATECREATED TIMESTAMP(3),IN DATEMODIFIED TIMESTAMP(3),IN MEDIATYPE VARCHAR(100),IN SIZE BIGINT,IN CANADDCHILD BOOLEAN,IN CANRENAME BOOLEAN,IN ISREADONLY BOOLEAN,IN ISVERSIONABLE BOOLEAN) SPECIFIC "mergeRoot_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT "U"."Id" "UserId","U"."UserName" "UserName","U"."DisplayName" "DisplayName","I"."Id" "Id","I"."Name" "Name","I"."DateCreated" "DateCreated","I"."DateModified" "DateModified","I"."MediaType" "MediaType","I"."Size" "Size","I"."IsRead" "IsRead","C"."CanAddChild" "CanAddChild","C"."CanRename" "CanRename","C"."IsReadOnly" "IsReadOnly","C"."IsVersionable" "IsVersionable" FROM PUBLIC."Items" AS "I" JOIN PUBLIC."Capabilities" AS "C" ON "I"."Id"="C"."ItemId" JOIN PUBLIC."Users" AS "U" ON "C"."UserId"="U"."Id" WHERE "I"."Id"=ITEMID AND "U"."Id"=USERID FOR READ ONLY;INSERT INTO PUBLIC."Users"("Id","UserName","DisplayName","RootId","TimeStamp")VALUES(USERID,USERNAME,DISPLAYNAME,ITEMID,DEFAULT);CALL "remplaceRoot"(ITEMID,NAME,DATECREATED,DATEMODIFIED,MEDIATYPE,SIZE);CALL "remplaceCapability"(USERID,ITEMID,CANADDCHILD,CANRENAME,ISREADONLY,ISVERSIONABLE);OPEN RESULT;END
CREATE PROCEDURE PUBLIC."countIdentifier"(IN USERID VARCHAR(100)) SPECIFIC "countIdentifier_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT COUNT("I"."Id")"Id" FROM PUBLIC."Identifiers" AS "I" WHERE "I"."InUse"=FALSE AND "I"."UserId"=USERID FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."insertIdentifier"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),OUT ROWCOUNT SMALLINT) SPECIFIC "insertIdentifier_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC INSERT INTO PUBLIC."Identifiers"("Id","UserId","InUse","TimeStamp")VALUES(ITEMID,USERID,DEFAULT,DEFAULT);GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."selectIdentifier"(IN USERID VARCHAR(100)) SPECIFIC "selectIdentifier_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT "I"."Id" FROM PUBLIC."Identifiers" AS "I" WHERE "I"."InUse"=FALSE AND "I"."UserId"=USERID ORDER BY "I"."TimeStamp" LIMIT 1 FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."updateIdentifier"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),OUT ROWCOUNT SMALLINT) SPECIFIC "updateIdentifier_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC UPDATE PUBLIC."Identifiers" SET "InUse"=TRUE WHERE "Id"=ITEMID AND "UserId"=USERID;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."isIdentifier"(IN USERID VARCHAR(100),IN ID VARCHAR(100)) SPECIFIC "isIdentifier_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT CONVERT(COUNT(1),BOOLEAN)"IsIdentifier" FROM PUBLIC."Identifiers" AS "D",PUBLIC."Items" AS "I" WHERE("D"."UserId"=USERID AND "D"."Id"=ID)OR "I"."Id"=ID FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."selectItem"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100)) SPECIFIC "selectItem_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT "I"."Id" "Id","I"."Name" "Name","I"."DateCreated" "DateCreated","I"."DateModified" "DateModified","I"."MediaType" "MediaType","I"."Size" "Size","I"."IsRead" "IsRead","C"."CanAddChild" "CanAddChild","C"."CanRename" "CanRename","C"."IsReadOnly" "IsReadOnly","C"."IsVersionable" "IsVersionable" FROM PUBLIC."Items" AS "I" JOIN PUBLIC."Capabilities" AS "C" ON "I"."Id"="C"."ItemId" WHERE "I"."Id"=ITEMID AND "C"."UserId"=USERID FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."insertItem"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),IN NAME VARCHAR(100),IN DATECREATED TIMESTAMP(3),IN DATEMODIFIED TIMESTAMP(3),IN MEDIATYPE VARCHAR(100),IN SIZE BIGINT,IN CANADDCHILD BOOLEAN,IN CANRENAME BOOLEAN,IN ISREADONLY BOOLEAN,IN ISVERSIONABLE BOOLEAN) SPECIFIC "insertItem_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT "I"."Id" "Id","I"."Name" "Name","I"."DateCreated" "DateCreated","I"."DateModified" "DateModified","I"."MediaType" "MediaType","I"."Size" "Size","I"."IsRead" "IsRead","C"."CanAddChild" "CanAddChild","C"."CanRename" "CanRename","C"."IsReadOnly" "IsReadOnly","C"."IsVersionable" "IsVersionable" FROM PUBLIC."Items" AS "I" JOIN PUBLIC."Capabilities" AS "C" ON "I"."Id"="C"."ItemId" WHERE "I"."Id"=ITEMID AND "C"."UserId"=USERID FOR READ ONLY;INSERT INTO PUBLIC."Items"("Id","Name","DateCreated","DateModified","MediaType","Size","IsRead","TimeStamp")VALUES(ITEMID,NAME,DATECREATED,DATEMODIFIED,MEDIATYPE,SIZE,DEFAULT,DEFAULT);INSERT INTO PUBLIC."Capabilities"("UserId","ItemId","CanAddChild","CanRename","IsReadOnly","IsVersionable","IsWrite","TimeStamp")VALUES(USERID,ITEMID,CANADDCHILD,CANRENAME,ISREADONLY,ISVERSIONABLE,DEFAULT,DEFAULT);OPEN RESULT;END
CREATE PROCEDURE PUBLIC."mergeItem"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),IN NAME VARCHAR(100),IN DATECREATED TIMESTAMP(3),IN DATEMODIFIED TIMESTAMP(3),IN MEDIATYPE VARCHAR(100),IN SIZE BIGINT,IN CANADDCHILD BOOLEAN,IN CANRENAME BOOLEAN,IN ISREADONLY BOOLEAN,IN ISVERSIONABLE BOOLEAN,OUT ROWCOUNT SMALLINT) SPECIFIC "mergeItem_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC DECLARE TMPCOUNT SMALLINT DEFAULT 0;DELETE FROM PUBLIC."Children" WHERE "ChildId"=ITEMID;CALL "remplaceItem"(ITEMID,NAME,DATECREATED,DATEMODIFIED,MEDIATYPE,SIZE,TMPCOUNT);CALL "remplaceCapability"(USERID,ITEMID,CANADDCHILD,CANRENAME,ISREADONLY,ISVERSIONABLE);SET ROWCOUNT=TMPCOUNT;END
CREATE PROCEDURE PUBLIC."countChild"(IN ITEMID VARCHAR(100),IN OFFLINE BOOLEAN,IN FOLDER VARCHAR(50),OUT ROWCOUNT SMALLINT) SPECIFIC "countChild_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC SELECT COUNT("I"."Id")INTO ROWCOUNT FROM PUBLIC."Children" AS "C" JOIN PUBLIC."Items" AS "I" ON "C"."ChildId"="I"."Id" WHERE "C"."ItemId"=ITEMID AND("I"."MediaType"=FOLDER OR("I"."IsRead"=TRUE OR "I"."IsRead"=OFFLINE));END
CREATE PROCEDURE PUBLIC."selectChild"(IN ITEMID VARCHAR(100),IN URL VARCHAR(250),IN FOLDER VARCHAR(50),IN OFFLINE BOOLEAN,OUT ROWCOUNT SMALLINT) SPECIFIC "selectChild_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE TMPCOUNT SMALLINT DEFAULT 0;DECLARE RESULT CURSOR WITH RETURN FOR SELECT "I"."Name" "Title","I"."Size" "Size","I"."DateModified" "DateModified","I"."DateCreated" "DateCreated","I"."MediaType"=FOLDER "IsFolder",CONCAT(URL,"I"."Id")"TargetURL",FALSE "IsHidden",FALSE "IsVolume",FALSE "IsRemote",FALSE "IsRemoveable",FALSE "IsFloppy",FALSE "IsCompactDisc" FROM PUBLIC."Children" AS "C" JOIN PUBLIC."Items" AS "I" ON "C"."ChildId"="I"."Id" WHERE "C"."ItemId"=ITEMID AND("I"."MediaType"=FOLDER OR("I"."IsRead"=TRUE OR "I"."IsRead"=OFFLINE))FOR READ ONLY;CALL "countChild"(ITEMID,OFFLINE,FOLDER,TMPCOUNT);SET ROWCOUNT=TMPCOUNT;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."insertChild"(IN CHILDID VARCHAR(100),IN ITEMID VARCHAR(100),OUT ROWCOUNT SMALLINT) SPECIFIC "insertChild_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC INSERT INTO PUBLIC."Children"("ChildId","ItemId","TimeStamp")VALUES(CHILDID,ITEMID,DEFAULT);GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."isChild"(IN CHILDID VARCHAR(100),IN ITEMID VARCHAR(100)) SPECIFIC "isChild_1" LANGUAGE SQL NOT DETERMINISTIC READS SQL DATA NEW SAVEPOINT LEVEL  DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE RESULT CURSOR WITH RETURN FOR SELECT CONVERT(COUNT(1),BOOLEAN)"IsChild" FROM PUBLIC."Children" WHERE "ChildId"=CHILDID AND "ItemId"=ITEMID FOR READ ONLY;OPEN RESULT;END
CREATE PROCEDURE PUBLIC."updateName"(IN ID VARCHAR(100),IN NAME VARCHAR(100),OUT ROWCOUNT SMALLINT) SPECIFIC "updateName_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC UPDATE PUBLIC."Items" SET "Name"=NAME WHERE "Id"=ID;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."updateSize"(IN ID VARCHAR(100),IN SIZE BIGINT,OUT ROWCOUNT SMALLINT) SPECIFIC "updateSize_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC UPDATE PUBLIC."Items" SET "Size"=SIZE WHERE "Id"=ID;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."updateIsRead"(IN ID VARCHAR(100),IN ISREAD BOOLEAN,OUT ROWCOUNT SMALLINT) SPECIFIC "updateIsRead_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC UPDATE PUBLIC."Items" SET "IsRead"=ISREAD WHERE "Id"=ID;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
CREATE PROCEDURE PUBLIC."updateIsWrite"(IN USERID VARCHAR(100),IN ITEMID VARCHAR(100),OUT ROWCOUNT SMALLINT) SPECIFIC "updateIsWrite_1" LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC UPDATE PUBLIC."Capabilities" SET "IsWrite"=TRUE WHERE "ItemId"=ITEMID AND "UserId"=USERID;GET DIAGNOSTICS ROWCOUNT=ROW_COUNT;END
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
